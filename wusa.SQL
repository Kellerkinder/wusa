--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 8.0.864
--   Created On : Freitag, 19 Oktober, 2012 
--   DBMS       : MySql 
--   -------------------------------------------------- 

USE wusa;

SET FOREIGN_KEY_CHECKS=0;


--  Drop Tables, Stored Procedures and Views 

DROP TABLE IF EXISTS cp_event;
DROP TABLE IF EXISTS cp_page;
DROP TABLE IF EXISTS cp_pageview;
DROP TABLE IF EXISTS cp_pageview_archiv;
DROP TABLE IF EXISTS cp_uc;
DROP TABLE IF EXISTS stamm_account;
DROP TABLE IF EXISTS stamm_counter;
DROP TABLE IF EXISTS stamm_eventtyp;
DROP TABLE IF EXISTS stamm_searchengines;
DROP TABLE IF EXISTS stamm_stat_pages;
DROP TABLE IF EXISTS stat_pages_60;
DROP TABLE IF EXISTS stat_referer;
DROP TABLE IF EXISTS stat_searchquerys;
DROP TABLE IF EXISTS stat_uc_300;
DROP TABLE IF EXISTS stat_uc_3600;
DROP TABLE IF EXISTS stat_uc_86400;
DROP TABLE IF EXISTS stat_visits_300;
DROP TABLE IF EXISTS stat_visits_3600;
DROP TABLE IF EXISTS stat_visits_86400;

--  Create Tables 
CREATE TABLE cp_event
(
	uc CHAR(32) NOT NULL COMMENT 'Uniqe Client der das Event ausgelöst hat',
	counterId MEDIUMINT UNSIGNED NOT NULL COMMENT 'Counter für den das Event getracked wird',
	eventtypId SMALLINT UNSIGNED NOT NULL COMMENT 'Typ des Events',
	pageId BIGINT UNSIGNED NOT NULL COMMENT 'Seite auf der das Event geraised wurde',
	uzeitpunkt TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt auf klientseite',
	szeitpunkt TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt auf Serverseite',
	visitsession VARCHAR(250) NOT NULL COMMENT 'Session des Visits',
	KEY (eventtypId),
	KEY (uc),
	KEY (counterId)
)  COMMENT='Events die mitgetracked werden';


CREATE TABLE cp_page
(
	pageId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	domain VARCHAR(255) NOT NULL COMMENT 'Domain der Seite',
	url VARCHAR(255) COMMENT 'Url der Seite',
	PRIMARY KEY (pageId)
)  COMMENT='Pages die Aufgerufen wurden';


CREATE TABLE cp_pageview
(
	uc CHAR(32) NOT NULL COMMENT 'Uniqe Client der den Zugriff gemacht hat',
	pageviewId BIGINT UNSIGNED NOT NULL COMMENT 'ID, die je uc hoch zählt',
	pageId BIGINT UNSIGNED NOT NULL,
	counterId MEDIUMINT UNSIGNED NOT NULL COMMENT 'ID des Counters mit dem der Zugriff getracked wurde',
	uzeitpunkt TIMESTAMP DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt des Zugriffs am Client',
	szeitpunkt TIMESTAMP DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt der Zugriffs am Server',
	referer VARCHAR(255) COMMENT 'Referer von dem aus zugegriffen wurde',
	viewport VARCHAR(15) COMMENT 'viewport, angezeigtes format',
	visitsession VARCHAR(250) NOT NULL COMMENT 'Session des Visits (Cookie wird bei browser close, gelöscht)',
	PRIMARY KEY (uc, pageviewId),
	KEY (uzeitpunkt),
	KEY (uc),
	KEY (counterId)
)  COMMENT='Zählpixelzugriffe - Pageimpressions';


CREATE TABLE cp_pageview_archiv
(
	uc CHAR(32) NOT NULL COMMENT 'Uniqe Client der den Zugriff gemacht hat',
	pageviewId BIGINT UNSIGNED NOT NULL COMMENT 'ID, die je uc hoch zählt',
	pageId BIGINT UNSIGNED NOT NULL,
	counterId MEDIUMINT UNSIGNED NOT NULL COMMENT 'ID des Counters mit dem der Zugriff getracked wurde',
	uzeitpunkt TIMESTAMP DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt des Zugriffs am Client',
	szeitpunkt TIMESTAMP DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt der Zugriffs am Server',
	referer VARCHAR(255) COMMENT 'Referer von dem aus zugegriffen wurde',
	viewport VARCHAR(15) COMMENT 'viewport, angezeigtes format',
	visitsession VARCHAR(250) NOT NULL COMMENT 'Session des Visits (Cookie wird bei browser close, gelöscht)'
)  COMMENT='Archiv der Tabelle cp_pageview';


CREATE TABLE cp_uc
(
	uc CHAR(32) NOT NULL COMMENT 'Unique Client Identifier md5 über session und useragent',
	ip VARCHAR(15) NOT NULL COMMENT 'IP des Uniqe Clients',
	useragent VARCHAR(200) NOT NULL COMMENT 'Useragent des UC',
	session VARCHAR(250) NOT NULL COMMENT 'Session die Übergeben wird vom UC',
	screenresolution VARCHAR(15) COMMENT 'Auflösung des Bildschirm',
	PRIMARY KEY (uc),
	UNIQUE INDEX ip_useragent_session (session ASC, useragent ASC)
) ;


CREATE TABLE stamm_account
(
	accountId SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID des Accounts',
	PRIMARY KEY (accountId)
)  COMMENT='Accounts die das System nutzen dürfen';


CREATE TABLE stamm_counter
(
	counterId MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID des Counters',
	counterType ENUM('KU') NOT NULL COMMENT 'Type des Accounts',
	domainregex VARCHAR(250) NOT NULL COMMENT 'Regex welche Domains zum Angebot gehören',
	domainregexSql VARCHAR(250) NOT NULL COMMENT 'Regualexpression für SQL Statments',
	accountId SMALLINT UNSIGNED NOT NULL COMMENT 'ID des Accounts zum Counter',
	PRIMARY KEY (counterId),
	KEY (accountId)
)  COMMENT='Counter die das System unterstützt';


CREATE TABLE stamm_eventtyp
(
	eventtypId SMALLINT UNSIGNED NOT NULL COMMENT 'ID des Eventtyps',
	bezeichnung VARCHAR(250) NOT NULL COMMENT 'Bezeichnung des Eventtyps',
	flag VARCHAR(50) NOT NULL COMMENT 'Flag die beim Event mitgeschickt wird um das Event zu identifizieren',
	PRIMARY KEY (eventtypId),
	UNIQUE UQ_cp_eventtyp_eventtypId(eventtypId),
	UNIQUE UQ_cp_eventtyp_flag(flag)
)  COMMENT='Welcher Typ von Event aufgerufen wurde';


CREATE TABLE stamm_searchengines
(
	searchengineId MEDIUMINT UNSIGNED NOT NULL COMMENT 'ID der Suchmaschniene',
	bezeichnung VARCHAR(70) NOT NULL COMMENT 'Bezeichnung der Suchmaschiene',
	domain VARCHAR(250) NOT NULL COMMENT 'Domain der Suchmaschniene',
	urlregex VARCHAR(250) NOT NULL COMMENT 'Regularexpression der URL',
	searchregex VARCHAR(250) NOT NULL,
	PRIMARY KEY (searchengineId)
)  COMMENT='Definition der Suchmaschienen';


CREATE TABLE stamm_stat_pages
(
	pageId BIGINT UNSIGNED NOT NULL COMMENT 'Id der Page für die eine Statistik erhoben werden soll',
	counterId SMALLINT UNSIGNED NOT NULL,
	PRIMARY KEY (pageId, counterId)
)  COMMENT='Für welche Pages Statistiken erhoben werden sollen';


CREATE TABLE stat_pages_60
(
	counterId SMALLINT UNSIGNED NOT NULL,
	timeblock DATETIME NOT NULL COMMENT 'für welchen Timeblock der Eintrag gikt',
	pageId BIGINT UNSIGNED NOT NULL COMMENT 'Page für die der Eintrag ist',
	klicks SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Klicks auf der Seite',
	pages SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Seitenaufrufe',
	PRIMARY KEY (counterId, timeblock, pageId)
) ;


CREATE TABLE stat_referer
(
	pageId BIGINT UNSIGNED NOT NULL,
	szeitpunkt TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
	domain VARCHAR(250) NOT NULL,
	url VARCHAR(255) NOT NULL,
	KEY (pageId)
)  COMMENT='Referer der pages. 
 Hier werden nur Seiten aufgeführt die keine Suchmaschienenzugriffe sind oder von der eigenen Seite kommen';


CREATE TABLE stat_searchquerys
(
	pageId BIGINT UNSIGNED NOT NULL COMMENT 'ID der Page auf die der Request ging',
	searchengineId MEDIUMINT UNSIGNED NOT NULL COMMENT 'ID der Suchmaschiene auf der gesucht wurde',
	search VARCHAR(255) NOT NULL COMMENT 'Wonach gesucht wurde',
	szeitpunkt TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt des Requests',
	KEY (pageId),
	KEY (searchengineId)
) ;


CREATE TABLE stat_uc_300
(
	counterId MEDIUMINT UNSIGNED NOT NULL,
	timeblock TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitinterval in für den der Eintrag gilt',
	uc CHAR(32) NOT NULL COMMENT 'Unique Klient für den der Eintrag gilt',
	szeitpunkt_first TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt an dem der erste Klick war',
	szeitpunkt_last TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt an dem der letzte klick war',
	klicks SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anazahl der Klicks in dem Interval',
	pages SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Seiten die aufgerufen wurden',
	PRIMARY KEY (counterId, timeblock, uc),
	KEY (uc)
)  COMMENT='Zählpixel - Unique Clients / 5min';


CREATE TABLE stat_uc_3600
(
	counterId MEDIUMINT UNSIGNED NOT NULL,
	timeblock TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitinterval in für den der Eintrag gilt',
	uc CHAR(32) NOT NULL COMMENT 'Unique Klient für den der Eintrag gilt',
	szeitpunkt_first TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt an dem der erste Klick war',
	szeitpunkt_last TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt an dem der letzte klick war',
	klicks SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anazahl der Klicks in dem Interval',
	pages SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Seiten die aufgerufen wurden',
	PRIMARY KEY (counterId, timeblock, uc),
	KEY (uc)
)  COMMENT='Zählpixel - Unique Clients / 5min';


CREATE TABLE stat_uc_86400
(
	counterId MEDIUMINT UNSIGNED NOT NULL,
	timeblock DATE NOT NULL DEFAULT '0000-00-00' COMMENT 'Zeitinterval in für den der Eintrag gilt',
	uc CHAR(32) NOT NULL COMMENT 'Unique Klient für den der Eintrag gilt',
	szeitpunkt_first TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt an dem der erste Klick war',
	szeitpunkt_last TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt an dem der letzte klick war',
	klicks SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anazahl der Klicks in dem Interval',
	pages SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Seiten die aufgerufen wurden',
	PRIMARY KEY (counterId, timeblock, uc),
	KEY (uc)
)  COMMENT='Zählpixel - Unique Clients / 5min';


CREATE TABLE stat_visits_300
(
	counterId MEDIUMINT UNSIGNED NOT NULL,
	timeblock TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitinterval für den Eintrag',
	uc CHAR(32) NOT NULL COMMENT 'Unique Client',
	visitsession VARCHAR(250) NOT NULL COMMENT 'Sessionid des Visits',
	szeitpunkt_first TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt des ersten klicks',
	szeitpunkt_last TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt des letzten klicks',
	klicks SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Klicks des Visits',
	pages SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Pages die Aufgerufen wurden',
	PRIMARY KEY (counterId, timeblock, uc, visitsession),
	KEY (uc)
)  COMMENT='Visits in den letzten 300 Sekunden';


CREATE TABLE stat_visits_3600
(
	counterId MEDIUMINT UNSIGNED NOT NULL,
	timeblock TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitinterval für den Eintrag',
	uc CHAR(32) NOT NULL COMMENT 'Unique Client',
	visitsession VARCHAR(250) NOT NULL COMMENT 'Sessionid des Visits',
	szeitpunkt_first TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt des ersten klicks',
	szeitpunkt_last TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt des letzten klicks',
	klicks SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Klicks des Visits',
	pages SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Pages die Aufgerufen wurden',
	PRIMARY KEY (counterId, timeblock, uc, visitsession),
	KEY (uc)
)  COMMENT='Visits in den letzten 300 Sekunden';


CREATE TABLE stat_visits_86400
(
	counterId MEDIUMINT UNSIGNED NOT NULL,
	timeblock DATE NOT NULL DEFAULT '0000-00-00' COMMENT 'Zeitinterval für den Eintrag',
	uc CHAR(32) NOT NULL COMMENT 'Unique Client',
	visitsession VARCHAR(250) NOT NULL COMMENT 'Sessionid des Visits',
	szeitpunkt_first TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt des ersten klicks',
	szeitpunkt_last TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Zeitpunkt des letzten klicks',
	klicks SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Klicks des Visits',
	pages SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Anzahl der Pages die Aufgerufen wurden',
	PRIMARY KEY (counterId, timeblock, uc, visitsession),
	KEY (uc)
)  COMMENT='Visits in den letzten 300 Sekunden';



SET FOREIGN_KEY_CHECKS=1;






--  Create Stored Procedures 
DROP PROCEDURE IF EXISTS createStats_uc;

delimiter //
CREATE PROCEDURE createStats_uc(IN bereich INT,IN szeitpunkt TIMESTAMP, IN iuc CHAR(32),IN type ENUM('pages','klicks'))
BEGIN
set @tbl = concat('stat_uc_',CAST(bereich as CHAR));
set @timeblock = FROM_UNIXTIME(UNIX_TIMESTAMP(szeitpunkt)-UNIX_TIMESTAMP(szeitpunkt)%bereich);
set @sel = CONCAT('select count(*) INTO @cnt from ',@tbl,' where uc = \'',iuc,'\' and timeblock = \'', @timeblock ,'\'');
-- insert into history (`sql`) VALUES (@sel);
PREPARE stmt FROM @sel;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
-- Einfügen der Statistiken für die Unique clients
IF(@cnt > 0)
THEN
set @up = CONCAT('update ',@tbl,' set ',type,' = ',type,'+1, szeitpunkt_last =  \'', szeitpunkt,'\' where uc = \'',iuc,'\' and timeblock = \'',@timeblock,'\'');
-- insert into history (`sql`) VALUES (@up);
PREPARE stmt1 FROM @up;
EXECUTE stmt1;
DEALLOCATE PREPARE stmt1;
-- update tbl set klicks = klicks+1, szeitpunkt_last = szeitpunkt where uc = iuc and timeblock = FROM_UNIXTIME(UNIX_TIMESTAMP(szeitpunkt)-UNIX_TIMESTAMP(szeitpunkt)%bereich);

ELSE
set @ins = CONCAT('insert into ',@tbl,' (timeblock,uc,szeitpunkt_last,szeitpunkt_first,',type,') VALUES (\'', @timeblock,'\',\'', iuc,'\',\'', szeitpunkt,'\',\'', szeitpunkt,'\',1)');
-- insert into history (`sql`) VALUES (@ins);
PREPARE stmt2 FROM @ins;
EXECUTE stmt2;
DEALLOCATE PREPARE stmt2;
-- insert into tbl  VALUES (FROM_UNIXTIME(UNIX_TIMESTAMP(szeitpunkt)-UNIX_TIMESTAMP(szeitpunkt)%bereich),iuc,szeitpunkt,szeitpunkt,0,1);
END IF;


END//

delimiter ;
;
 ALTER TABLE `cp_pageview_archiv` ENGINE = ARCHIVE ;
insert into stamm_account VALUES (1);;
insert into stamm_counter VALUES (1,'KU','#^(.*\\.)?kurier\\.(e[0-9]*(a|b)\\.int|at)$#','^(.*\.)?kurier\.(e[0-9]*(a|b)\.int|at)$',1);;

--  Create Triggers 
-- Erstellt die Statistiken
delimiter //
CREATE TRIGGER createStats AFTER INSERT ON cp_event
FOR EACH ROW BEGIN
DECLARE timebl DATETIME;
DECLARE datum DATE;

set datum = DATE(NEW.szeitpunkt);
-- Einfügen der Statistiken für den Zeitblock der 5 Minuten erstellen
set timebl = FROM_UNIXTIME(UNIX_TIMESTAMP(NEW.szeitpunkt)-UNIX_TIMESTAMP(NEW.szeitpunkt)%300);
-- Uniqe Clients
IF(select count(*) from stat_uc_300 where uc = NEW.uc and timeblock = timebl and counterId= NEW.counterId > 0)
THEN
update stat_uc_300 set klicks = klicks+1, szeitpunkt_last = NEW.szeitpunkt where uc = NEW.uc and timeblock = timebl and counterId= NEW.counterId;
ELSE
insert into stat_uc_300 (timeblock,szeitpunkt_first,szeitpunkt_last,uc,klicks,counterId) VALUES (timebl,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId);
END IF;
-- Visits
IF(select count(*) from stat_visits_300 where uc = NEW.uc and timeblock = timebl and visitsession = NEW.visitsession and counterId= NEW.counterId > 0)
THEN
update stat_visits_300 set klicks = klicks+1, szeitpunkt_last = NEW.szeitpunkt where uc = NEW.uc and timeblock = timebl and visitsession = NEW.visitsession and counterId= NEW.counterId;
ELSE
insert into stat_visits_300 (timeblock,visitsession,szeitpunkt_first,szeitpunkt_last,uc,klicks,counterId) VALUES (timebl,NEW.visitsession,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId);
END IF;


-- Einfügen der Statistiken für den Zeitblock der Stunden erstellen
set timebl = FROM_UNIXTIME(UNIX_TIMESTAMP(NEW.szeitpunkt)-UNIX_TIMESTAMP(NEW.szeitpunkt)%3600);
-- Uniqe Clients
IF(select count(*) from stat_uc_3600 where uc = NEW.uc and timeblock = timebl and counterId= NEW.counterId > 0)
THEN
update stat_uc_3600 set klicks = klicks+1, szeitpunkt_last = NEW.szeitpunkt where uc = NEW.uc and timeblock = timebl and counterId= NEW.counterId;
ELSE
insert into stat_uc_3600 (timeblock,szeitpunkt_first,szeitpunkt_last,uc,klicks,counterId) VALUES (timebl,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId);
END IF;
-- Visits
IF(select count(*) from stat_visits_3600 where uc = NEW.uc and timeblock = timebl and visitsession = NEW.visitsession and counterId= NEW.counterId > 0)
THEN
update stat_visits_3600 set klicks = klicks+1, szeitpunkt_last = NEW.szeitpunkt where uc = NEW.uc and timeblock = timebl and visitsession = NEW.visitsession and counterId= NEW.counterId;
ELSE
insert into stat_visits_3600 (timeblock,visitsession,szeitpunkt_first,szeitpunkt_last,uc,klicks,counterId) VALUES (timebl,NEW.visitsession,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId);
END IF;

-- Einfügen der Statistiken für die Tage
-- Uniqe Clients
IF(select count(*) from stat_uc_86400 where uc = NEW.uc and timeblock = datum and counterId= NEW.counterId > 0)
THEN
update stat_uc_86400 set klicks = klicks+1, szeitpunkt_last = NEW.szeitpunkt where uc = NEW.uc and timeblock = datum and counterId= NEW.counterId;
ELSE
insert into stat_uc_86400 (timeblock,szeitpunkt_first,szeitpunkt_last,uc,klicks,counterId) VALUES (datum,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId);
END IF;
-- Visits
IF(select count(*) from stat_visits_86400 where uc = NEW.uc and timeblock = datum and visitsession = NEW.visitsession and counterId= NEW.counterId > 0)
THEN
update stat_visits_86400 set klicks = klicks+1, szeitpunkt_last = NEW.szeitpunkt where uc = NEW.uc and timeblock = datum and visitsession = NEW.visitsession and counterId= NEW.counterId;
ELSE
insert into stat_visits_86400 (timeblock,visitsession,szeitpunkt_first,szeitpunkt_last,uc,klicks,counterId) VALUES (datum,NEW.visitsession,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId);
END IF;

END//
delimiter ;
;
-- Setzt die PageviewId korrekt je nach uc
delimiter //
CREATE TRIGGER `pageviewId` BEFORE INSERT ON `cp_pageview`
FOR EACH ROW BEGIN
declare v_id bigint unsigned default 0;
select max(pageviewId) + 1 into v_id from cp_pageview where uc = new.uc;
if(v_id IS NULL) THEN
set v_id = 1;
END IF;
set new.pageviewId = v_id;
END//
delimiter ;
;
-- Erstellt die Statistiken entsprechend der definitionen
delimiter //
DROP TRIGGER IF EXISTS `createStatsPageview`//
CREATE TRIGGER `createStatsPageview` AFTER INSERT ON `cp_pageview`
 FOR EACH ROW BEGIN

	DECLARE timebl DATETIME;
	DECLARE rdomain VARCHAR(1024);
	DECLARE dregex VARCHAR(1024);
	DECLARE rurl VARCHAR(1024) default '/';
	DECLARE datum DATE;
	DECLARE timeblbase INT(11) UNSIGNED;
	
	SET datum = DATE(NEW.szeitpunkt);
	SET timeblbase = UNIX_TIMESTAMP(NEW.szeitpunkt);
	
	--
	--
	-- Statistik fuer Zeitblock: 1 Minute
	--
	--
	SET timebl = FROM_UNIXTIME(timeblbase - timeblbase%60);
	--
	-- Pages
	--
	IF (select count(*) FROM stamm_stat_pages WHERE pageId = NEW.pageId and counterId= NEW.counterId > 0)
	THEN
		INSERT INTO stat_pages_60 (counterId,timeblock,pageId,pages) VALUES (NEW.counterId,timebl,NEW.pageId,1)
		ON DUPLICATE KEY UPDATE pages = pages + 1;
	END IF;
	--
	--
	-- Statistik für Zeitblock: 5 Minuten
	--
	--
	SET timebl = FROM_UNIXTIME(timeblbase - timeblbase%300);
	--
	-- Uniqe Clients
	--	
	INSERT INTO stat_uc_300 (timeblock,szeitpunkt_first,szeitpunkt_last,uc,pages,counterId) VALUES (timebl,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId)
	ON DUPLICATE KEY UPDATE pages = pages + 1, szeitpunkt_last = NEW.szeitpunkt;	
	--
	-- Visits
	--
	INSERT INTO stat_visits_300 (timeblock,visitsession,szeitpunkt_first,szeitpunkt_last,uc,pages,counterId) VALUES (timebl,NEW.visitsession,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId)
	ON DUPLICATE KEY UPDATE pages = pages+1, szeitpunkt_last = NEW.szeitpunkt;
	--
	--
	-- Statistik für Zeitblock: 60 Minuten ( 1 Stunde )
	--
	--
	SET timebl = FROM_UNIXTIME(timeblbase - timeblbase%3600);
	--
	-- Uniqe Clients
	--
	INSERT INTO stat_uc_3600 (timeblock,szeitpunkt_first,szeitpunkt_last,uc,pages,counterId) VALUES (timebl,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId)
	ON DUPLICATE KEY UPDATE pages = pages+1, szeitpunkt_last = NEW.szeitpunkt;	
	--
	-- Visits
	--
	INSERT INTO stat_visits_3600 (timeblock,visitsession,szeitpunkt_first,szeitpunkt_last,uc,pages,counterId) VALUES (timebl,NEW.visitsession,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId)
	ON DUPLICATE KEY UPDATE pages = pages+1, szeitpunkt_last = NEW.szeitpunkt;
	--
	--
	-- Statistik für Zeitblock: 1440 Minuten ( 1 Tag )
	--
	--
	-- Uniqe Clients
	--
	INSERT INTO stat_uc_86400 (timeblock,szeitpunkt_first,szeitpunkt_last,uc,pages,counterId) VALUES (datum,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId)
	ON DUPLICATE KEY UPDATE pages = pages+1, szeitpunkt_last = NEW.szeitpunkt;
	--
	-- Visits
	--
	INSERT INTO stat_visits_86400 (timeblock,visitsession,szeitpunkt_first,szeitpunkt_last,uc,pages,counterId) VALUES (datum,NEW.visitsession,NEW.szeitpunkt,NEW.szeitpunkt,NEW.uc,1,NEW.counterId)
	ON DUPLICATE KEY UPDATE pages = pages+1, szeitpunkt_last = NEW.szeitpunkt;
	--
	--
	-- Einfügen der Referer
	--
	--
	IF (NEW.referer IS NOT NULL) 
	THEN
		SELECT domainregexSql INTO dregex FROM stamm_counter WHERE counterId = NEW.counterId;
		if(NEW.referer NOT REGEXP dregex OR dregex IS NULL) 
		THEN
			SET rdomain = SUBSTRING_INDEX(NEW.referer,'/',3);
			SET rurl = SUBSTRING(NEW.referer,LENGTH(rdomain)+1);
			SET rdomain = SUBSTRING_INDEX(rdomain,'/',-1);
			INSERT INTO stat_referer (pageid,szeitpunkt,`domain`,url) VALUES (NEW.pageId,NEW.szeitpunkt,rdomain,rurl);
		END IF;
	END IF;
END
//
delimiter ;
;
