<?

//Prefix for CP Tables
$prefixCp = $config->counter->db->prefix;
//Prefix for Mastertables
$prefixMaster = $config->master->db->prefix;

$tables = array();
$table = new \Wusa\Db\Metadata\Object\TableObject($prefixCp.'event');
$table->setComment('WUSA - Tracked Events');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('uc',$prefixCp.'event');
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('char');
$col->setCharacterMaximumLength('32');
$col->setCharacterOctetLength('96');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Uniqe Client that raised the event');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterId',$prefixCp.'event');
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('mediumint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('7');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the Counter');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('eventtypeId',$prefixCp.'event');
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('smallint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('5');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('Type of the Event');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageId',$prefixCp.'event');
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the Page where the event raised');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('ctimestamp',$prefixCp.'event');
$col->setOrdinalPosition('5');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at clientside');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('stimestamp',$prefixCp.'event');
$col->setOrdinalPosition('6');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at serverside');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('visitsession',$prefixCp.'event');
$col->setOrdinalPosition('7');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Session of the visit (this cookie will be deleted with browserclose)');
$cols[] = $col;
$table->setColumns($cols);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject($prefixCp.'page');
$table->setComment('WUSA - Requested pages');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageId',$prefixCp.'page');
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of tracked page');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('domain',$prefixCp.'page');
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('255');
$col->setCharacterOctetLength('765');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Domain of the page');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('url',$prefixCp.'page');
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('255');
$col->setCharacterOctetLength('765');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('url of the Page');
$cols[] = $col;
$table->setColumns($cols);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject($prefixCp.'pageview');
$table->setComment('WUSA - Pageimpressions');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('uc',$prefixCp.'pageview');
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('char');
$col->setCharacterMaximumLength('32');
$col->setCharacterOctetLength('96');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Uniqe Client who did that request');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageviewId',$prefixCp.'pageview');
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID will increment per uc');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageId',$prefixCp.'pageview');
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('Id of the Page that was requested');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterId',$prefixCp.'pageview');
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('mediumint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('7');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID des Counters mit dem der Zugriff getracked wurde');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('ctimestamp',$prefixCp.'pageview');
$col->setOrdinalPosition('5');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at clientside');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('stimestamp',$prefixCp.'pageview');
$col->setOrdinalPosition('6');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at serverside');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('referer',$prefixCp.'pageview');
$col->setOrdinalPosition('7');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('255');
$col->setCharacterOctetLength('765');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Referer of the Pagerequest');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('viewport',$prefixCp.'pageview');
$col->setOrdinalPosition('8');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('15');
$col->setCharacterOctetLength('45');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('viewport, viewed format');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('visitsession',$prefixCp.'pageview');
$col->setOrdinalPosition('9');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Session of the visit (this cookie will be deleted with browserclose)');
$cols[] = $col;
$table->setColumns($cols);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject($prefixCp.'pageview_archiv');
$table->setComment('WUSA - Archivetable of Pageimpressions');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('uc',$prefixCp.'pageview_archiv');
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('char');
$col->setCharacterMaximumLength('32');
$col->setCharacterOctetLength('96');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Uniqe Client who did that request');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageviewId',$prefixCp.'pageview_archiv');
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID will increment per uc');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageId',$prefixCp.'pageview_archiv');
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('Id of the Page that was requested');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterId',$prefixCp.'pageview_archiv');
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('mediumint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('7');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID des Counters mit dem der Zugriff getracked wurde');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('ctimestamp',$prefixCp.'pageview_archiv');
$col->setOrdinalPosition('5');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at clientside');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('stimestamp',$prefixCp.'pageview_archiv');
$col->setOrdinalPosition('6');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at serverside');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('referer',$prefixCp.'pageview_archiv');
$col->setOrdinalPosition('7');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('255');
$col->setCharacterOctetLength('765');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Referer of the Pagerequest');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('viewport',$prefixCp.'pageview_archiv');
$col->setOrdinalPosition('8');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('15');
$col->setCharacterOctetLength('45');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('viewport, viewed format');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('visitsession',$prefixCp.'pageview_archiv');
$col->setOrdinalPosition('9');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Session of the visit (this cookie will be deleted with browserclose)');
$cols[] = $col;
$table->setColumns($cols);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject($prefixCp.'uc');
$table->setComment('');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('uc',$prefixCp.'uc');
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('char');
$col->setCharacterMaximumLength('32');
$col->setCharacterOctetLength('96');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Unique client identifier (md5 from session and useragent)');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('ip',$prefixCp.'uc');
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('15');
$col->setCharacterOctetLength('45');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('IP of the uniqe client');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('useragent',$prefixCp.'uc');
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('200');
$col->setCharacterOctetLength('600');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Useragent of the UC');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('session',$prefixCp.'uc');
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Session thats transmitted from UC');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('screenresolution',$prefixCp.'uc');
$col->setOrdinalPosition('5');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('15');
$col->setCharacterOctetLength('45');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Screen resolution');
$cols[] = $col;
$table->setColumns($cols);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject($prefixMaster.'account');
$table->setComment('WUSA - Account table');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('accountId',$prefixMaster.'account');
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('smallint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('5');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the account');
$cols[] = $col;
$table->setColumns($cols);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject($prefixMaster.'counter');
$table->setComment('WUSA - Countertable');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterId',$prefixMaster.'counter');
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('mediumint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('7');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the Counter');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('accountId',$prefixMaster.'counter');
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('smallint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('5');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the account that ownes that counter');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterType',$prefixMaster.'counter');
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('enum');
$col->setCharacterMaximumLength('2');
$col->setCharacterOctetLength('6');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Type of the account');
$col->setErrata('permitted_values',array (
    0 => 'KU',
));
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('domainregex',$prefixMaster.'counter');
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Regex that catches all domains that should be tracked');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('domainregexSql',$prefixMaster.'counter');
$col->setOrdinalPosition('5');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Sameregex as domainregex but prepared for use with MySQL');
$cols[] = $col;
$table->setColumns($cols);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject($prefixMaster.'eventtype');
$table->setComment('WUSA - Eventtypes');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('eventtypeId',$prefixMaster.'eventtype');
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('smallint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('5');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the eventtype');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('description',$prefixMaster.'eventtype');
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Description of the eventtype');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('flag',$prefixMaster.'eventtype');
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('50');
$col->setCharacterOctetLength('150');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Flag thats transmitted with the event to identify the eventtype');
$cols[] = $col;
$table->setColumns($cols);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject($prefixMaster.'searchengines');
$table->setComment('WUSA - Definition of searchengines');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('searchengineId',$prefixMaster.'searchengines');
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('mediumint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('7');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the searchengine');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('description',$prefixMaster.'searchengines');
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('70');
$col->setCharacterOctetLength('210');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Description of the searchengine');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('domain',$prefixMaster.'searchengines');
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Domain der Suchmaschniene');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('urlregex',$prefixMaster.'searchengines');
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Regularexpression der URL');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('searchregex',$prefixMaster.'searchengines');
$col->setOrdinalPosition('5');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('');
$cols[] = $col;
$table->setColumns($cols);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject($prefixMaster.'stat_pages');
$table->setComment('WUSA - Defines for which pages detailed stat will be created');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageId',$prefixMaster.'stat_pages');
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('Id of the page for which the stats should be created');
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterId',$prefixMaster.'stat_pages');
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('smallint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('5');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the counter where that rule occures');
$cols[] = $col;
$table->setColumns($cols);
$tables[] = $table;
