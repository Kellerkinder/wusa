<?php

//Prefix for CP Tables
$prefixCp = $config->counter->db->prefix;
//Prefix for Mastertables
$prefixMaster = $config->master->db->prefix;


$tables = array();
$table = new \Wusa\Db\Metadata\Object\TableObject("{$prefixCp}event");
$table->setComment('WUSA - Tracked Events');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('uc',"{$prefixCp}event");
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('char');
$col->setCharacterMaximumLength('32');
$col->setCharacterOctetLength('96');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Uniqe Client that raised the event');
$col->setTableName("{$prefixCp}event");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterId',"{$prefixCp}event");
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('mediumint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('7');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the Counter');
$col->setTableName("{$prefixCp}event");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('eventtypeId',"{$prefixCp}event");
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('smallint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('5');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('Type of the Event');
$col->setTableName("{$prefixCp}event");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageId',"{$prefixCp}event");
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the Page where the event raised');
$col->setTableName("{$prefixCp}event");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('ctimestamp',"{$prefixCp}event");
$col->setOrdinalPosition('5');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at clientside');
$col->setTableName("{$prefixCp}event");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('stimestamp',"{$prefixCp}event");
$col->setOrdinalPosition('6');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at serverside');
$col->setTableName("{$prefixCp}event");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('visitsession',"{$prefixCp}event");
$col->setOrdinalPosition('7');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Session of the visit (this cookie will be deleted with browserclose)');
$col->setTableName("{$prefixCp}event");
$cols[] = $col;
$table->setColumns($cols);
$constraints = array();
$table->setConstraints($constraints);
$indexes = array();
$ind = new \Wusa\Db\Metadata\Object\IndexObject('counterId',"{$prefixCp}event");
$ind->setUnique(false);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'counterId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$ind = new \Wusa\Db\Metadata\Object\IndexObject('eventtypeId',"{$prefixCp}event");
$ind->setUnique(false);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'eventtypeId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$ind = new \Wusa\Db\Metadata\Object\IndexObject('uc',"{$prefixCp}event");
$ind->setUnique(false);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'uc',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$table->setIndexes($indexes);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject("{$prefixCp}page");
$table->setComment('WUSA - Requested pages');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageId',"{$prefixCp}page");
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of tracked page');
$col->setTableName("{$prefixCp}page");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('domain',"{$prefixCp}page");
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('255');
$col->setCharacterOctetLength('765');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Domain of the page');
$col->setTableName("{$prefixCp}page");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('url',"{$prefixCp}page");
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('255');
$col->setCharacterOctetLength('765');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('url of the Page');
$col->setTableName("{$prefixCp}page");
$cols[] = $col;
$table->setColumns($cols);
$constraints = array();
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_cp_page_PRIMARY',"{$prefixCp}page");
$const->setSchemaName('cp_cp');
$const->setType('PRIMARY KEY');
$const->setColumns(array (
    0 => 'pageId',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$table->setConstraints($constraints);
$indexes = array();
$ind = new \Wusa\Db\Metadata\Object\IndexObject('PRIMARY',"{$prefixCp}page");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'pageId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$table->setIndexes($indexes);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject("{$prefixCp}pageview");
$table->setComment('WUSA - Pageimpressions');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('uc',"{$prefixCp}pageview");
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('char');
$col->setCharacterMaximumLength('32');
$col->setCharacterOctetLength('96');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Uniqe Client who did that request');
$col->setTableName("{$prefixCp}pageview");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageviewId',"{$prefixCp}pageview");
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID will increment per uc');
$col->setTableName("{$prefixCp}pageview");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageId',"{$prefixCp}pageview");
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('Id of the Page that was requested');
$col->setTableName("{$prefixCp}pageview");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterId',"{$prefixCp}pageview");
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('mediumint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('7');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID des Counters mit dem der Zugriff getracked wurde');
$col->setTableName("{$prefixCp}pageview");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('ctimestamp',"{$prefixCp}pageview");
$col->setOrdinalPosition('5');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at clientside');
$col->setTableName("{$prefixCp}pageview");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('stimestamp',"{$prefixCp}pageview");
$col->setOrdinalPosition('6');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at serverside');
$col->setTableName("{$prefixCp}pageview");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('referer',"{$prefixCp}pageview");
$col->setOrdinalPosition('7');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('255');
$col->setCharacterOctetLength('765');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Referer of the Pagerequest');
$col->setTableName("{$prefixCp}pageview");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('viewport',"{$prefixCp}pageview");
$col->setOrdinalPosition('8');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('15');
$col->setCharacterOctetLength('45');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('viewport, viewed format');
$col->setTableName("{$prefixCp}pageview");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('visitsession',"{$prefixCp}pageview");
$col->setOrdinalPosition('9');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Session of the visit (this cookie will be deleted with browserclose)');
$col->setTableName("{$prefixCp}pageview");
$cols[] = $col;
$table->setColumns($cols);
$constraints = array();
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_cp_pageview_PRIMARY',"{$prefixCp}pageview");
$const->setSchemaName('cp_cp');
$const->setType('PRIMARY KEY');
$const->setColumns(array (
    0 => 'uc',
    1 => 'pageviewId',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$table->setConstraints($constraints);
$indexes = array();
$ind = new \Wusa\Db\Metadata\Object\IndexObject('counterId',"{$prefixCp}pageview");
$ind->setUnique(false);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'counterId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$ind = new \Wusa\Db\Metadata\Object\IndexObject('ctimestamp',"{$prefixCp}pageview");
$ind->setUnique(false);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'ctimestamp',
    1 => 'uc',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$ind = new \Wusa\Db\Metadata\Object\IndexObject('PRIMARY',"{$prefixCp}pageview");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'uc',
    1 => 'pageviewId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$ind = new \Wusa\Db\Metadata\Object\IndexObject('uc',"{$prefixCp}pageview");
$ind->setUnique(false);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'uc',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$table->setIndexes($indexes);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject("{$prefixCp}pageview_archiv");
$table->setComment('WUSA - Archivetable of Pageimpressions');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('uc',"{$prefixCp}pageview_archiv");
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('char');
$col->setCharacterMaximumLength('32');
$col->setCharacterOctetLength('96');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Uniqe Client who did that request');
$col->setTableName("{$prefixCp}pageview_archiv");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageviewId',"{$prefixCp}pageview_archiv");
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID will increment per uc');
$col->setTableName("{$prefixCp}pageview_archiv");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageId',"{$prefixCp}pageview_archiv");
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('Id of the Page that was requested');
$col->setTableName("{$prefixCp}pageview_archiv");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterId',"{$prefixCp}pageview_archiv");
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('mediumint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('7');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID des Counters mit dem der Zugriff getracked wurde');
$col->setTableName("{$prefixCp}pageview_archiv");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('ctimestamp',"{$prefixCp}pageview_archiv");
$col->setOrdinalPosition('5');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at clientside');
$col->setTableName("{$prefixCp}pageview_archiv");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('stimestamp',"{$prefixCp}pageview_archiv");
$col->setOrdinalPosition('6');
$col->setColumnDefault('0000-00-00 00:00:00');
$col->setIsNullable(false);
$col->setDataType('timestamp');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Datetime of request at serverside');
$col->setTableName("{$prefixCp}pageview_archiv");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('referer',"{$prefixCp}pageview_archiv");
$col->setOrdinalPosition('7');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('255');
$col->setCharacterOctetLength('765');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Referer of the Pagerequest');
$col->setTableName("{$prefixCp}pageview_archiv");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('viewport',"{$prefixCp}pageview_archiv");
$col->setOrdinalPosition('8');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('15');
$col->setCharacterOctetLength('45');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('viewport, viewed format');
$col->setTableName("{$prefixCp}pageview_archiv");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('visitsession',"{$prefixCp}pageview_archiv");
$col->setOrdinalPosition('9');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Session of the visit (this cookie will be deleted with browserclose)');
$col->setTableName("{$prefixCp}pageview_archiv");
$cols[] = $col;
$table->setColumns($cols);
$constraints = array();
$table->setConstraints($constraints);
$indexes = array();
$table->setIndexes($indexes);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject("{$prefixCp}uc");
$table->setComment('');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('uc',"{$prefixCp}uc");
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('char');
$col->setCharacterMaximumLength('32');
$col->setCharacterOctetLength('96');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Unique client identifier (md5 from session and useragent)');
$col->setTableName("{$prefixCp}uc");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('ip',"{$prefixCp}uc");
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('15');
$col->setCharacterOctetLength('45');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('IP of the uniqe client');
$col->setTableName("{$prefixCp}uc");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('useragent',"{$prefixCp}uc");
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('200');
$col->setCharacterOctetLength('600');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Useragent of the UC');
$col->setTableName("{$prefixCp}uc");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('session',"{$prefixCp}uc");
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Session thats transmitted from UC');
$col->setTableName("{$prefixCp}uc");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('screenresolution',"{$prefixCp}uc");
$col->setOrdinalPosition('5');
$col->setColumnDefault(NULL);
$col->setIsNullable(true);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('15');
$col->setCharacterOctetLength('45');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Screen resolution');
$col->setTableName("{$prefixCp}uc");
$cols[] = $col;
$table->setColumns($cols);
$constraints = array();
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_cp_uc_PRIMARY',"{$prefixCp}uc");
$const->setSchemaName('cp_cp');
$const->setType('PRIMARY KEY');
$const->setColumns(array (
    0 => 'uc',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_cp_uc_ip_useragent_session',"{$prefixCp}uc");
$const->setSchemaName('cp_cp');
$const->setType('UNIQUE');
$const->setColumns(array (
    0 => 'session',
    1 => 'useragent',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$table->setConstraints($constraints);
$indexes = array();
$ind = new \Wusa\Db\Metadata\Object\IndexObject('ip_useragent_session',"{$prefixCp}uc");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'session',
    1 => 'useragent',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$ind = new \Wusa\Db\Metadata\Object\IndexObject('PRIMARY',"{$prefixCp}uc");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'uc',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$table->setIndexes($indexes);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject("{$prefixMaster}account");
$table->setComment('WUSA - Account table');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('accountId',"{$prefixMaster}account");
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('smallint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('5');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the account');
$col->setTableName("{$prefixMaster}account");
$cols[] = $col;
$table->setColumns($cols);
$constraints = array();
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_master_account_PRIMARY',"{$prefixMaster}account");
$const->setSchemaName('cp_cp');
$const->setType('PRIMARY KEY');
$const->setColumns(array (
    0 => 'accountId',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$table->setConstraints($constraints);
$indexes = array();
$ind = new \Wusa\Db\Metadata\Object\IndexObject('PRIMARY',"{$prefixMaster}account");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'accountId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$table->setIndexes($indexes);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject("{$prefixMaster}counter");
$table->setComment('WUSA - Countertable');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterId',"{$prefixMaster}counter");
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('mediumint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('7');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the Counter');
$col->setTableName("{$prefixMaster}counter");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('accountId',"{$prefixMaster}counter");
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('smallint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('5');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the account that ownes that counter');
$col->setTableName("{$prefixMaster}counter");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterType',"{$prefixMaster}counter");
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('enum');
$col->setCharacterMaximumLength('2');
$col->setCharacterOctetLength('6');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Type of the account');
$col->setTableName("{$prefixMaster}counter");
$col->setErrata('permitted_values',array (
    0 => 'KU',
));
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('domainregex',"{$prefixMaster}counter");
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Regex that catches all domains that should be tracked');
$col->setTableName("{$prefixMaster}counter");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('domainregexSql',"{$prefixMaster}counter");
$col->setOrdinalPosition('5');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Sameregex as domainregex but prepared for use with MySQL');
$col->setTableName("{$prefixMaster}counter");
$cols[] = $col;
$table->setColumns($cols);
$constraints = array();
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_master_counter_PRIMARY',"{$prefixMaster}counter");
$const->setSchemaName('cp_cp');
$const->setType('PRIMARY KEY');
$const->setColumns(array (
    0 => 'counterId',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$table->setConstraints($constraints);
$indexes = array();
$ind = new \Wusa\Db\Metadata\Object\IndexObject('accountId',"{$prefixMaster}counter");
$ind->setUnique(false);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'accountId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$ind = new \Wusa\Db\Metadata\Object\IndexObject('PRIMARY',"{$prefixMaster}counter");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'counterId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$table->setIndexes($indexes);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject("{$prefixMaster}eventtype");
$table->setComment('WUSA - Eventtypes');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('eventtypeId',"{$prefixMaster}eventtype");
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('smallint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('5');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the eventtype');
$col->setTableName("{$prefixMaster}eventtype");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('description',"{$prefixMaster}eventtype");
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Description of the eventtype');
$col->setTableName("{$prefixMaster}eventtype");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('flag',"{$prefixMaster}eventtype");
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('50');
$col->setCharacterOctetLength('150');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Flag thats transmitted with the event to identify the eventtype');
$col->setTableName("{$prefixMaster}eventtype");
$cols[] = $col;
$table->setColumns($cols);
$constraints = array();
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_master_eventtype_PRIMARY',"{$prefixMaster}eventtype");
$const->setSchemaName('cp_cp');
$const->setType('PRIMARY KEY');
$const->setColumns(array (
    0 => 'eventtypeId',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_master_eventtype_UQ_cp_eventtyp_eventtypId',"{$prefixMaster}eventtype");
$const->setSchemaName('cp_cp');
$const->setType('UNIQUE');
$const->setColumns(array (
    0 => 'eventtypeId',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_master_eventtype_UQ_cp_eventtyp_flag',"{$prefixMaster}eventtype");
$const->setSchemaName('cp_cp');
$const->setType('UNIQUE');
$const->setColumns(array (
    0 => 'flag',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$table->setConstraints($constraints);
$indexes = array();
$ind = new \Wusa\Db\Metadata\Object\IndexObject('PRIMARY',"{$prefixMaster}eventtype");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'eventtypeId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$ind = new \Wusa\Db\Metadata\Object\IndexObject('UQ_cp_eventtyp_eventtypId',"{$prefixMaster}eventtype");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'eventtypeId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$ind = new \Wusa\Db\Metadata\Object\IndexObject('UQ_cp_eventtyp_flag',"{$prefixMaster}eventtype");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'flag',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$table->setIndexes($indexes);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject("{$prefixMaster}searchengines");
$table->setComment('WUSA - Definition of searchengines');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('searchengineId',"{$prefixMaster}searchengines");
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('mediumint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('7');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the searchengine');
$col->setTableName("{$prefixMaster}searchengines");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('description',"{$prefixMaster}searchengines");
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('70');
$col->setCharacterOctetLength('210');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Description of the searchengine');
$col->setTableName("{$prefixMaster}searchengines");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('domain',"{$prefixMaster}searchengines");
$col->setOrdinalPosition('3');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Domain der Suchmaschniene');
$col->setTableName("{$prefixMaster}searchengines");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('urlregex',"{$prefixMaster}searchengines");
$col->setOrdinalPosition('4');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('Regularexpression der URL');
$col->setTableName("{$prefixMaster}searchengines");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('searchregex',"{$prefixMaster}searchengines");
$col->setOrdinalPosition('5');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('varchar');
$col->setCharacterMaximumLength('250');
$col->setCharacterOctetLength('750');
$col->setNumericPrecision(NULL);
$col->setNumericScale(NULL);
$col->setNumericUnsigned(false);
$col->setComment('');
$col->setTableName("{$prefixMaster}searchengines");
$cols[] = $col;
$table->setColumns($cols);
$constraints = array();
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_master_searchengines_PRIMARY',"{$prefixMaster}searchengines");
$const->setSchemaName('cp_cp');
$const->setType('PRIMARY KEY');
$const->setColumns(array (
    0 => 'searchengineId',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$table->setConstraints($constraints);
$indexes = array();
$ind = new \Wusa\Db\Metadata\Object\IndexObject('PRIMARY',"{$prefixMaster}searchengines");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'searchengineId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$table->setIndexes($indexes);
$tables[] = $table;
$table = new \Wusa\Db\Metadata\Object\TableObject("{$prefixMaster}stat_pages");
$table->setComment('WUSA - Defines for which pages detailed stat will be created');
$cols = array();
$col = new \Wusa\Db\Metadata\Object\ColumnObject('pageId',"{$prefixMaster}stat_pages");
$col->setOrdinalPosition('1');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('bigint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('20');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('Id of the page for which the stats should be created');
$col->setTableName("{$prefixMaster}stat_pages");
$cols[] = $col;
$col = new \Wusa\Db\Metadata\Object\ColumnObject('counterId',"{$prefixMaster}stat_pages");
$col->setOrdinalPosition('2');
$col->setColumnDefault(NULL);
$col->setIsNullable(false);
$col->setDataType('smallint');
$col->setCharacterMaximumLength(NULL);
$col->setCharacterOctetLength(NULL);
$col->setNumericPrecision('5');
$col->setNumericScale('0');
$col->setNumericUnsigned(true);
$col->setComment('ID of the counter where that rule occures');
$col->setTableName("{$prefixMaster}stat_pages");
$cols[] = $col;
$table->setColumns($cols);
$constraints = array();
$const = new \Zend\Db\Metadata\Object\ConstraintObject('_zf_master_stat_pages_PRIMARY',"{$prefixMaster}stat_pages");
$const->setSchemaName('cp_cp');
$const->setType('PRIMARY KEY');
$const->setColumns(array (
    0 => 'pageId',
    1 => 'counterId',
));
$const->setReferencedTableSchema(NULL);
$const->setReferencedTableName(NULL);
$const->setMatchOption(NULL);
$const->setUpdateRule(NULL);
$const->setDeleteRule(NULL);
$const->setCheckClause(NULL);
$constraints[] = $const;
$table->setConstraints($constraints);
$indexes = array();
$ind = new \Wusa\Db\Metadata\Object\IndexObject('PRIMARY',"{$prefixMaster}stat_pages");
$ind->setUnique(true);
$ind->setType('BTREE');
$ind->setColumns(array (
    0 => 'pageId',
    1 => 'counterId',
));
$ind->setComment(NULL);
$indexes[] = $ind;
$table->setIndexes($indexes);
$tables[] = $table;
$triggers = array();
$trigger = new Wusa\Db\Metadata\Object\TriggerObject();
$trigger->setName('pageviewId');
$trigger->setEventManipulation('INSERT');
$trigger->setEventObjectCatalog('def');
$trigger->setEventObjectSchema('cp_cp');
$trigger->setEventObjectTable('cp_pageview');
$trigger->setActionOrder('0');
$trigger->setActionCondition(NULL);
$trigger->setActionStatement('BEGIN
declare v_id bigint unsigned default 0;
select max(pageviewId) + 1 into v_id from cp_pageview where uc = new.uc;
if(v_id IS NULL) THEN
set v_id = 1;
END IF;
set new.pageviewId = v_id;
END');
$trigger->setActionOrientation('ROW');
$trigger->setActionTiming('BEFORE');
$trigger->setActionReferenceOldTable(NULL);
$trigger->setActionReferenceNewTable(NULL);
$trigger->setActionReferenceOldRow('OLD');
$trigger->setActionReferenceNewRow('NEW');
$trigger->setCreated(NULL);
$triggers[] = $trigger;
$trigger = new Wusa\Db\Metadata\Object\TriggerObject();
$trigger->setName('pageviewArchivId');
$trigger->setEventManipulation('INSERT');
$trigger->setEventObjectCatalog('def');
$trigger->setEventObjectSchema('cp_cp');
$trigger->setEventObjectTable('cp_pageview_archiv');
$trigger->setActionOrder('0');
$trigger->setActionCondition(NULL);
$trigger->setActionStatement('BEGIN
declare v_id bigint unsigned default 0;
select max(pageviewId) + 1 into v_id from cp_pageview_archiv where uc = new.uc;
if(v_id IS NULL) THEN
set v_id = 1;
END IF;
set new.pageviewId = v_id;
END');
$trigger->setActionOrientation('ROW');
$trigger->setActionTiming('BEFORE');
$trigger->setActionReferenceOldTable(NULL);
$trigger->setActionReferenceNewTable(NULL);
$trigger->setActionReferenceOldRow('OLD');
$trigger->setActionReferenceNewRow('NEW');
$trigger->setCreated(NULL);
$triggers[] = $trigger;
?>
